use alienfile;

configure {
  requires 'FFI::CheckLib';
  requires 'Devel::CheckLib';
  requires 'File::Which';
};

probe sub {

  require FFI::CheckLib;
  require Devel::CheckLib;
  require File::Which;

  if(Devel::CheckLib::check_lib( lib => 'lucet_runtime' )
  && FFI::CheckLib::find_lib( lib => 'lucet_runtime' ) )
  {
    return 'system';
  }
  elsif(File::Which::which('cargo') && File::Which::which('rustc'))
  {
    return 'share';
  }
  else
  {
    print "Requires with system lucet-runtime or rust compiler";
    exit 0;
  }

};

share {

  requires 'Alien::git';

  download [
    '%{git} clone --depth 1 https://github.com/fastly/lucet.git .',
    '%{git} submodule init',
    '%{git} submodule update',
  ];

  extract [
    'cp -r %{.install.download} .',
  ];

  build [
    'cd lucet-runtime',
    'cargo build --release',
    'cd ..',
    'mkdir -p %{.install.prefix}/lib',
    'cp target/release/liblucet_runtime.* %{.install.prefix}/lib',
    'cp -r lucet-runtime/include %{.install.prefix}/include',
  ];

  plugin 'Gather::IsolateDynamic';

  gather sub {
    my($build) = @_;
    my $prefix = $build->runtime_prop->{prefix};
    my $download = $build->install_prop->{download};
    my $version = `git -C $download rev-parse HEAD`;
    chomp $version;
    $build->runtime_prop->{version}     = $version;
    $build->runtime_prop->{cflags}      = "-I$prefix/include";
    $build->runtime_prop->{libs}        = "-L$prefix/lib -llucet_runtime";
    $build->runtime_prop->{libs_static} = "-L$prefix/lib -llucet_runtime -lrt";
  };

};

sys {

  gather sub {
    my($build) = @_;
    $build->runtime_prop->{version}     = 'unknown';
    $build->runtime_prop->{ffi_name}    = "lucet_runtime";
    $build->runtime_prop->{cflags}      = "";
    $build->runtime_prop->{libs}        = "-llucet_runtime";
    $build->runtime_prop->{libs_static} = "-llucet_runtime -lrt";
  };

};
